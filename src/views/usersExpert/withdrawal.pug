extends ../layouts/noPartialMain
include ../partials/mixins

block content
  .dashboard__page#dashboard__page
    .dashboard__page-flex
      //- 대시보드 좌측 사이드바 들어갈 자리 [Mixin으로 구현]
      +dashboardSideBar(loggedUser.role)
      //- 대시보드 우측 컨텐츠 들어갈 자리
      .dashboard__contents-flex
        #dashboard__withdrawal
          section.withdrawal__header
            h1.dashboard__title Withdrawal
          section.withdrawal__body
            section.withdrawal__form-section
              .withdrawal__flex
                ul.box__items
                  li.box__item
                    h1.item__title Total<br>Requests
                    h1.item__content=totalRequests.length
                  li.box__item
                    h1.item__title Total<br>Completed
                    h1.item__content=completedRequests.length
                  li.box__item
                    h1.item__title Total<br>Reviews
                    h1.item__content=reviews.length
                //- 요청 폼
                .form__flex
                  form.withdrawal__form#withdrawalForm(method="post")
                    h1.totalBalance__title Total Balance
                    h1.totlaBalance__amount=`$ ${totalBalance.toFixed(2)}`
                    .form__group
                      label.form__label Paypal or Payoneer
                      select.form__select.form__required.active.chartin__select-diagnosis(type="text" name="company" autocomplete="off" required)
                        option.form__option(value="Paypal") Paypal
                        option.form__option(value="Payoneer") Payoneer
                    .form__group
                      label.form__label Request Amount
                      input.form__input.form__required(type="number" name="amount" step="0.01" autocomplete="off" required)
                    .form__group
                      label.form__label Account Email
                      input.form__input.form__required(type="email" name="accountEmail" autocomplete="off" required)
                    .form__group
                      label.form__label VAT number
                      input.form__input(type="number" name="vat" autocomplete="off")
                    .form__group
                      label.form__label Bank name
                      input.form__input.form__required(type="text" name="bankName" autocomplete="off" required)
                    .form__group
                      label.form__label Name under which your bank account is registered
                      input.form__input.form__required(type="text" name="accountHolder" autocomplete="off" required)
                    .form__group
                      label.form__label Account number
                      input.form__input.form__required(type="number" name="accountNumber" autocomplete="off" required)
                    .form__group
                      label.form__label Address
                      input.form__input.form__required(type="text" name="address" autocomplete="off" required)
                    .form__group
                      button.withdrawal__btn(type="button") Request
            section.withdrawal__transaction-section
              .transaction__flex
                h1.transaction__title Transaction History
                ul.transaction__menu-items
                  li.transaction__menu-item.item__number
                    h1.item__title #
                  li.transaction__menu-item.item__orderID
                    h1.item__title Musician
                  li.transaction__menu-item.item__type
                    h1.item__title Type
                  li.transaction__menu-item.item__date
                    h1.item__title Date
                  li.transaction__menu-item.item__amount
                    h1.item__title Amount
                  li.transaction__menu-item.item__amount
                    h1.item__title Status
                ul.transaction__content__items
                  each item, index in transactionHistories
                    li.transaction__content-item.item__number
                      h1.item__title.item__number=`${index + 1}`
                      h1.item__title.item__orderID=item.musicianName
                      h1.item__title.item__type=`${item.requestType}`
                      h1.item__title.item__date=dateFormatMDY3(item.createdAt)
                      h1.item__title.item__amount=`$${item.amount}`
                      h1.item__title.item__amount=`${item.status ? item.status : "-"}`
              //- BEGIN: Pagination
              #pagination__flex
                if transactionHistories.length !== 0
                  section.admin__pagination
                    ul.pagination
                      li
                        a(href=`?page=1&limit=${limit}`)
                          img(src=`${imgPath}/admin/double-prev.png`)
                      if paginate.hasPreviousPages
                        li
                          a(href=paginate.href(true) aria-label="Previous")
                            img(src=`${imgPath}/admin/prev.png`)
                      each page in transactionPages
                        if paginate.page == page.number
                          li.active
                            a.number-link(href=page.url)=page.number
                        else
                          li
                            a.number-link(href=page.url)=page.number
                      if paginate.hasNextPages(transactionPageCount)
                        li
                          a(href=paginate.href())
                            img(src=`${imgPath}/admin/next.png`)
                      li
                        a(href=`?page=${transactionPageCount}&limit=${limit}`)
                          img(src=`${imgPath}/admin/double-next.png`)
